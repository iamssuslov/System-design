version: '3.8'

services:
  user_service:
    build:
      context: ../Lab_2/user_service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      - mongo-db
      - kafka

  file_service:
    build:
      context: ../Lab_2/file_service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    networks:
      - app-network
    depends_on:
      - db
      - redis

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app-network

  post-init:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - db
      - file_service

  mongo-db:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ../Lab_4/initdb:/docker-entrypoint-initdb.d
      - ../Lab_4/initdb/data.json:/docker-entrypoint-initdb.d/data.json
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    depends_on:
      - db
    networks:
      - app-network

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g" # Уникальный идентификатор кластера
    volumes:
      - kafka_volume:/bitnami/kafka
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_NAME: "kraft"
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  mongo-data:
  redis_data:
  kafka_volume:
